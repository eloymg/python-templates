[tool.poetry]
name = "python_templates"
version = "0.0.1"
description = "Description"
authors = ["eloy moreno"]

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
isort = "^5.11.4"
pre-commit = "^2.21.0"
copier = "^7.0.1"

[tool.poetry.group.typing.dependencies]
mypy = "^0.991"

[tool.poetry.group.lint.dependencies]
pylint = "^2.15.9"
mccabe = "^0.7.0"

[tool.poetry.group.tests.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
boto3 = "^1.26.41"

[tool.poetry.group.nox.dependencies]
nox = "^2022.11.21"

[[tool.poetry.source]]
name = "artifactory"
url = "https://artifactory.mpi-internal.com/artifactory/api/pypi/pypi-virtual/simple"
priority = "supplemental"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.scripts]
govsectickeator = "govsectickeator.cli.cli:main"

[tool.pylint.basic]
load-plugins = ["pylint.extensions.mccabe"]
output-format = "colorized"

[tool.pylint.design]
max-args = 10
min-public-methods = 1
ignore-paths = "./src/cdk.out"

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "import-error",
    "too-few-public-methods",
    "protected-access"]
max-line-length = 88

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.coverage.run]
branch = true
parallel = true
relative_files = true
source = ["src"]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
addopts = "-v --cov=src --cov-report xml --cov-config=pyproject.toml"
junit_suite_name = "src"

[tool.mypy]
pretty = true
exclude = "src/cdk.out"
strict = true

[build-system]
requires = ["poetry==1.5.1"]
build-backend = "poetry.masonry.api"
